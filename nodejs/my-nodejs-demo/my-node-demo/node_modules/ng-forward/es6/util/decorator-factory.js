import { providerStore } from '../writers';
const randomInt = () => Math.floor(Math.random() * 100);
export default function (type, strategyType = 'provider') {
    let names = new Set();
    function createUniqueName(name) {
        if (names.has(name)) {
            return createUniqueName(`${name}${randomInt()}`);
        }
        else {
            return name;
        }
    }
    ;
    const NAME_TAKEN_ERROR = (name) => {
        return new Error(`A provider with type ${type} and name ${name} has already been registered`);
    };
    return (() => {
        let d = function (maybeT) {
            const writeWithUniqueName = (t) => {
                let name = createUniqueName(t.name);
                providerStore.set('type', type, t);
                providerStore.set('name', name, t);
                names.add(name);
            };
            if (typeof maybeT === 'string') {
                if (names.has(maybeT)) {
                    throw NAME_TAKEN_ERROR(maybeT);
                }
                return (t) => {
                    providerStore.set('type', type, t);
                    providerStore.set('name', maybeT, t);
                    names.add(maybeT);
                };
            }
            else if (maybeT === undefined) {
                return (t) => writeWithUniqueName(t);
            }
            writeWithUniqueName(maybeT);
        };
        d.clearNameCache = () => names.clear();
        return d;
    })();
}
;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi91dGlsL2RlY29yYXRvci1mYWN0b3J5LnRzIl0sIm5hbWVzIjpbImNyZWF0ZVVuaXF1ZU5hbWUiXSwibWFwcGluZ3MiOiJPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sWUFBWTtBQUV4QyxNQUFNLFNBQVMsR0FBRyxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBT3hELHlCQUF3QixJQUFZLEVBQUUsWUFBWSxHQUFXLFVBQVU7SUFDdEUsSUFBSSxLQUFLLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUV0QiwwQkFBMEIsSUFBVztRQUNwQ0EsRUFBRUEsQ0FBQUEsQ0FBRUEsS0FBS0EsQ0FBQ0EsR0FBR0EsQ0FBQ0EsSUFBSUEsQ0FBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDdEJBLE1BQU1BLENBQUNBLGdCQUFnQkEsQ0FBQ0EsR0FBR0EsSUFBSUEsR0FBR0EsU0FBU0EsRUFBRUEsRUFBRUEsQ0FBQ0EsQ0FBQ0E7UUFDbERBLENBQUNBO1FBQUNBLElBQUlBLENBQUNBLENBQUNBO1lBQ1BBLE1BQU1BLENBQUNBLElBQUlBLENBQUNBO1FBQ2JBLENBQUNBO0lBQ0ZBLENBQUNBO0lBQUEsQ0FBQztJQUVGLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxJQUFXO1FBQ3BDLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyx3QkFBd0IsSUFBSSxhQUFhLElBQUksOEJBQThCLENBQUMsQ0FBQztJQUMvRixDQUFDLENBQUM7SUFHRixNQUFNLENBQUMsQ0FBQztRQUNQLElBQUksQ0FBQyxHQUFRLFVBQVMsTUFBVztZQUNoQyxNQUFNLG1CQUFtQixHQUFHLENBQUMsQ0FBTTtnQkFDbEMsSUFBSSxJQUFJLEdBQUcsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNwQyxhQUFhLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ25DLGFBQWEsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDbkMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNqQixDQUFDLENBQUM7WUFFRixFQUFFLENBQUMsQ0FBQyxPQUFPLE1BQU0sS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUNoQyxFQUFFLENBQUEsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDdEIsTUFBTSxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDaEMsQ0FBQztnQkFFRCxNQUFNLENBQUMsQ0FBQyxDQUFNO29CQUNiLGFBQWEsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztvQkFDbkMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO29CQUNyQyxLQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUNuQixDQUFDLENBQUM7WUFDSCxDQUFDO1lBQ0QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUMvQixNQUFNLENBQUMsQ0FBQyxDQUFNLEtBQVksbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbEQsQ0FBQztZQUVELG1CQUFtQixDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQzVCLENBQUMsQ0FBQztRQUVGLENBQUMsQ0FBQyxjQUFjLEdBQUcsTUFBTSxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7UUFFdkMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNWLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDTixDQUFDO0FBQUEsQ0FBQyIsImZpbGUiOiJsaWIvdXRpbC9kZWNvcmF0b3ItZmFjdG9yeS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cHJvdmlkZXJTdG9yZX0gZnJvbSAnLi4vd3JpdGVycyc7XG5cbmNvbnN0IHJhbmRvbUludCA9ICgpID0+IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMCk7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVW5pcXVlTmFtZURlY29yYXRvcntcblx0KG1heWJlVDogYW55KTogYW55O1xuXHRjbGVhck5hbWVDYWNoZSgpOiB2b2lkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0eXBlOiBzdHJpbmcsIHN0cmF0ZWd5VHlwZTogc3RyaW5nID0gJ3Byb3ZpZGVyJyk6IFVuaXF1ZU5hbWVEZWNvcmF0b3J7XG5cdGxldCBuYW1lcyA9IG5ldyBTZXQoKTtcblxuXHRmdW5jdGlvbiBjcmVhdGVVbmlxdWVOYW1lKG5hbWU6c3RyaW5nKTogc3RyaW5ne1xuXHRcdGlmKCBuYW1lcy5oYXMobmFtZSkgKSB7XG5cdFx0XHRyZXR1cm4gY3JlYXRlVW5pcXVlTmFtZShgJHtuYW1lfSR7cmFuZG9tSW50KCl9YCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiBuYW1lO1xuXHRcdH1cblx0fTtcblxuXHRjb25zdCBOQU1FX1RBS0VOX0VSUk9SID0gKG5hbWU6c3RyaW5nKSA6IEVycm9yID0+IHtcblx0XHRyZXR1cm4gbmV3IEVycm9yKGBBIHByb3ZpZGVyIHdpdGggdHlwZSAke3R5cGV9IGFuZCBuYW1lICR7bmFtZX0gaGFzIGFscmVhZHkgYmVlbiByZWdpc3RlcmVkYCk7XG5cdH07XG5cblx0Ly8gUmV0dXJuIHRoZSBmYWN0b3J5XG5cdHJldHVybiAoKCk6IFVuaXF1ZU5hbWVEZWNvcmF0b3IgPT4ge1xuXHRcdGxldCBkOiBhbnkgPSBmdW5jdGlvbihtYXliZVQ6IGFueSkgOiBhbnl7XG5cdFx0XHRjb25zdCB3cml0ZVdpdGhVbmlxdWVOYW1lID0gKHQ6IGFueSkgOiB2b2lkID0+IHtcblx0XHRcdFx0bGV0IG5hbWUgPSBjcmVhdGVVbmlxdWVOYW1lKHQubmFtZSk7XG5cdFx0XHRcdHByb3ZpZGVyU3RvcmUuc2V0KCd0eXBlJywgdHlwZSwgdCk7XG5cdFx0XHRcdHByb3ZpZGVyU3RvcmUuc2V0KCduYW1lJywgbmFtZSwgdCk7XG5cdFx0XHRcdG5hbWVzLmFkZChuYW1lKTtcblx0XHRcdH07XG5cblx0XHRcdGlmICh0eXBlb2YgbWF5YmVUID09PSAnc3RyaW5nJykge1xuXHRcdFx0XHRpZihuYW1lcy5oYXMobWF5YmVUKSkge1xuXHRcdFx0XHRcdHRocm93IE5BTUVfVEFLRU5fRVJST1IobWF5YmVUKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiAodDogYW55KSA6IHZvaWQgPT4ge1xuXHRcdFx0XHRcdHByb3ZpZGVyU3RvcmUuc2V0KCd0eXBlJywgdHlwZSwgdCk7XG5cdFx0XHRcdFx0cHJvdmlkZXJTdG9yZS5zZXQoJ25hbWUnLCBtYXliZVQsIHQpO1xuXHRcdFx0XHRcdG5hbWVzLmFkZChtYXliZVQpO1xuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSBpZiAobWF5YmVUID09PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0cmV0dXJuICh0OiBhbnkpIDogdm9pZCA9PiB3cml0ZVdpdGhVbmlxdWVOYW1lKHQpO1xuXHRcdFx0fVxuXG5cdFx0XHR3cml0ZVdpdGhVbmlxdWVOYW1lKG1heWJlVClcblx0XHR9O1xuXG5cdFx0ZC5jbGVhck5hbWVDYWNoZSA9ICgpID0+IG5hbWVzLmNsZWFyKCk7XG5cblx0XHRyZXR1cm4gZDtcblx0fSkoKTtcbn07XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
