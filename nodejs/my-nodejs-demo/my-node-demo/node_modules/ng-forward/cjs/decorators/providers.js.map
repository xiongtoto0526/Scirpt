{"version":3,"sources":["/source/decorators/lib/decorators/providers.ts"],"names":["Providers"],"mappings":";;;;;;;;;;;uBAY0B,YAAY;;yCACG,iCAAiC;;;;AAE1E,SAAA,SAAA,GAAuD;sCAA1B,mBAA0B;AAA1B,2BAA0B;;;AACrDA,WAAOA,UAASA,CAAMA;YAAEA,YAAYA,4EAA4BA,CAACA,CAACA,IAAIA;4BAAcA;gDACrD,4CAA6B,mBAAmB,EAAE,YAAY,CAAC;;gBAAtF,OAAO,iCAAP,OAAO;gBAAE,SAAS,iCAAT,SAAS;;AAExB,gBAAI,aAAa,GAAG,qBAAY,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AACxD,iCAAY,GAAG,CAAC,SAAS,+BAAM,OAAO,sBAAK,aAAa,IAAG,CAAC,CAAC,CAAC;AAE9D,gBAAI,eAAe,GAAG,qBAAY,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AAC5D,iCAAY,GAAG,CAAC,WAAW,+BAAM,SAAS,sBAAK,eAAe,IAAG,CAAC,CAAC,CAAC;SACrE;KAAA,CAAAA;CACFA","file":"decorators/providers.js","sourcesContent":["// # Injectables Decorator\n//\n// This decorator takes a list of bindings/injectables and filters it into\n// two lists: module names ('ui-router', 'ngAria') and provider classes/functions.\n// Then it sets this information using the appWriter, preserving information from\n// a parent class. This is used by the `bundle` function for traversal.\n//\n// It is also worth noting that this injectable is used by `@Component` to handle\n// the bindings array that you can pass to it as well as the directives array you\n// can pass to `@View`.\n//\n// Simple decorator, not likely to be used on its own.\nimport {bundleStore} from '../writers';\nimport groupIntoModulesAndProviders from '../util/group-modules-providers';\n\nexport function Providers(...modulesAndProviders: any[]){\n  return function(t: any, errorContext: string = `while parsing ${t.name}'s providers`){\n    let { modules, providers } = groupIntoModulesAndProviders(modulesAndProviders, errorContext);\n  \n    let parentModules = bundleStore.get('modules', t) || [];\n    bundleStore.set('modules', [...modules, ...parentModules], t);\n  \n    let parentProviders = bundleStore.get('providers', t) || [];\n    bundleStore.set('providers', [...providers, ...parentProviders], t);\n  }\n}\n"],"sourceRoot":"/source/"}