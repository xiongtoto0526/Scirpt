{"version":3,"sources":["/source/decorators/lib/decorators/input-output.ts"],"names":["Input","Output"],"mappings":";;;;;;;;;;uBAA6B,YAAY;;0CACZ,kCAAkC;;;;4BAC5C,kBAAkB;;;;AAErC,IAAa,cAAc,GAAG,SAAjB,cAAc,CAAI,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAA;AAChE,QAAI,GAAG,GAAG,SAAS,IAAI,UAAU,SAAO,UAAU,MAAO,AAAC,CAAC;AAC3D,QAAI,MAAM,GAAG,6CAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;AACrC,QAAI,cAAc,GAAG,wBAAe,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AAC3D,4BAAe,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3E,WAAO,MAAM,CAAC;CACd,CAAC;;AAEF,IAAa,aAAa,GAAG,SAAhB,aAAa,CAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAA;AAC/C,QAAI,MAAM,GAAG,6CAAiB,KAAK,CAAC,CAAC;AACrC,QAAI,cAAc,GAAG,wBAAe,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AAC3D,4BAAe,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3E,WAAO,MAAM,CAAC;CACd,CAAC;;;AAEF,SAAA,KAAA,CAAsB,UAAmB,EAAA;AACxCA,WAAOA,UAASA,KAAUA,EAAEA,SAAiBA,EAAAA;AAC5C,sBAAc,CAAC,KAAK,CAAC,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;KACrE,CAAAA;CACDA;;AAED,SAAA,MAAA,CAAuB,UAAmB,EAAA;AACzCC,WAAOA,UAASA,KAAUA,EAAEA,SAAiBA,EAAAA;AAC5C,YAAI,SAAS,GAAG,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;AACtF,cAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;mBAAI,0BAAO,GAAG,CAAC,GAAG,CAAC;SAAA,CAAC,CAAC;KACvD,CAAAA;CACDA","file":"decorators/input-output.js","sourcesContent":["import {componentStore} from '../writers';\nimport parsePropertyMap from '../properties/parse-property-map';\nimport events from '../events/events';\n\nexport const writeMapSingle = (t, localName, publicName, storeKey) => {\n\tlet put = localName + (publicName ? `:${publicName}` : ``);\n\tlet putMap = parsePropertyMap([put]);\n\tlet previousPutMap = componentStore.get(storeKey, t) || {};\n\tcomponentStore.set(storeKey, Object.assign({}, previousPutMap, putMap), t);\n\treturn putMap;\n};\n\nexport const writeMapMulti = (t, names, storeKey) => {\n\tlet putMap = parsePropertyMap(names);\n\tlet previousPutMap = componentStore.get(storeKey, t) || {};\n\tcomponentStore.set(storeKey, Object.assign({}, previousPutMap, putMap), t);\n\treturn putMap;\n};\n\nexport function Input(publicName?: string){\n\treturn function(proto: any, localName: string){\n\t\twriteMapSingle(proto.constructor, localName, publicName, 'inputMap');\n\t}\n}\n\nexport function Output(publicName?: string){\n\treturn function(proto: any, localName: string){\n\t\tlet outputMap = writeMapSingle(proto.constructor, localName, publicName, 'outputMap');\n\t\tObject.keys(outputMap).forEach(key => events.add(key));\n\t}\n}\n"],"sourceRoot":"/source/"}