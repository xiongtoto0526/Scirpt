{"version":3,"sources":["/source/testing/lib/testing/test-component-builder.ts"],"names":["TestComponentBuilder","TestComponentBuilder.create","TestComponentBuilder.createAsync","TestComponentBuilder.overrideTemplate","TestComponentBuilder.overrideProviders","TestComponentBuilder.overrideView","TestComponentBuilder.overrideDirective","TestComponentBuilder.overrideViewBindings","ComponentFixture","ComponentFixture.constructor","ComponentFixture.detectChanges","compileComponent","compileHtmlAndScope"],"mappings":"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","file":"testing/test-component-builder.js","sourcesContent":["import bundle from '../bundle';\nimport { Providers } from '../decorators/providers';\nimport { providers, allProviders, clearProviders } from './providers';\nimport { bundleStore, componentStore } from '../writers';\nimport { View } from '../decorators/component'\nimport {INgForwardJQuery} from \"../util/jqlite-extensions\";\nimport IInjectorService = angular.auto.IInjectorService;\nimport {DecoratedModule} from \"../classes/module\";\n\nexport interface ngClass {\n  new (...any): any;\n  name?:string;\n}\n\n/**\n * TestComponentBuilder\n *\n * The preferred way to test components\n */\nexport class TestComponentBuilder {\n  /**\n   * Takes a root component, typically a test component whose template houses another component\n   * under test. Returns a ComponentFixture that contains a debugElement reference\n   * to the test component (which you can use to drill down to the component under test) as well\n   * as a detectChanges method which aliases to a scope digest call.\n   *\n   * @param rootComponent\n   * @returns {ComponentFixture}\n   */\n  private create(rootComponent: ngClass): ComponentFixture {\n    let decoratedModule: DecoratedModule = bundle('test.module', rootComponent);\n    angular.mock.module(decoratedModule.name);\n    angular.mock.module($provide =>\n    // todo: support all providers, not just useValue ones\n        allProviders().forEach(({token, useValue}) =>\n            $provide.value(token, useValue)));\n\n    let fixture: ComponentFixture = compileComponent(rootComponent);\n    clearProviders();\n    return fixture;\n  }\n\n  /**\n   * Takes a root component, typically a test component whose template houses another component\n   * under test. Returns a ComponentFixture that contains a debugElement reference\n   * to the test component (which you can use to drill down to the component under test) as well\n   * as a detectChanges method which aliases to a scope digest call.\n   *\n   * @param rootComponent\n   * @returns {Promise<ComponentFixture>}\n     */\n  createAsync(rootComponent: ngClass): Promise<ComponentFixture> {\n    let fixture: ComponentFixture = this.create(rootComponent);\n    return Promise.resolve(fixture);\n  }\n\n  overrideTemplate(component: ngClass, template: string): TestComponentBuilder {\n    componentStore.set('template', template, component);\n    return this;\n  }\n\n  overrideProviders(component: ngClass, providers: (ngClass|string)[]): TestComponentBuilder {\n    bundleStore.set('providers', providers, component);\n    return this;\n  }\n\n  overrideView(component: ngClass, config: {\n    template?: string,\n    templateUrl?: string,\n    pipes?: any[],\n    directives?: ngClass[]\n  }): TestComponentBuilder {\n    View(config)(component);\n    return this;\n  }\n\n  overrideDirective()     { throw new Error('Method not supported in ng-forward.'); }\n  overrideViewBindings()  { throw new Error('Method not supported in ng-forward.'); }\n}\n\n\n/**\n * ComponentFixture is what is returned from a TestComponentBuilder.create call.\n * It gives access to the root test debug element, which in turn gives access to\n * component instance, children and angular element methods. Also has a detectChanges\n * method that triggers a digest.\n */\nexport class ComponentFixture {\n  public debugElement: INgForwardJQuery;\n  public componentInstance: any;\n  public nativeElement: any;\n  private rootTestScope: ng.IScope;\n\n  constructor({\n        debugElement,\n        rootTestScope,\n        $injector\n      } :\n      {\n        debugElement:INgForwardJQuery,\n        rootTestScope: ng.IScope,\n        $injector: IInjectorService\n      }) {\n    this.debugElement = debugElement;\n    this.debugElement.data('$injector', $injector);\n    this.componentInstance = debugElement.componentInstance;\n    this.nativeElement = debugElement.nativeElement;\n\n    this.rootTestScope = rootTestScope;\n  }\n\n  /**\n   * Triggers a root test scope digest.\n   */\n  detectChanges(): void {\n    this.rootTestScope.$digest();\n  }\n}\n\n\n/**\n * A function for compiling a decorated component into a ComponentFixture\n *\n * @param ComponentClass\n * @returns {ComponentFixture}\n */\nexport function compileComponent(ComponentClass:ngClass): ComponentFixture {\n\n  let selector: string = bundleStore.get('selector', ComponentClass),\n      rootTestScope: ng.IScope,\n      debugElement: INgForwardJQuery,\n      componentInstance: any,\n      $injector: IInjectorService;\n\n  inject(($compile, $rootScope, _$injector_) => {\n    let controllerAs = componentStore.get('controllerAs', ComponentClass);\n    componentInstance = new ComponentClass();\n    rootTestScope = $rootScope.$new();\n    debugElement = angular.element(`<${selector}></${selector}>`);\n    debugElement = $compile(debugElement)(rootTestScope);\n    rootTestScope.$digest();\n    $injector = _$injector_;\n  });\n\n  return new ComponentFixture({debugElement, rootTestScope, $injector});\n}\n\n\n/**\n * A function for compiling an html template against a data object. This is\n * for testing directives in regular angular 1. No dependencies on the\n * ng-forward.\n *\n * Recommended to use TestComponentBuilder instead if you are using ng-forward.\n *\n * @param html\n * @param initialScope\n * @param selector\n * @returns {{parentScope: *, element: *, controller: *, isolateScope: *}}\n */\nexport function compileHtmlAndScope({html, initialScope, selector}){\n\n  let parentScope, element, controller, isolateScope;\n\n  inject(($compile, $rootScope) => {\n    parentScope = $rootScope.$new();\n    Object.assign(parentScope, initialScope);\n    element = angular.element(html);\n    element = $compile(element)(parentScope);\n    parentScope.$digest();\n    isolateScope = element.isolateScope();\n    controller = element.controller(`${selector}`);\n  });\n\n  return {parentScope, element, controller, isolateScope};\n}"],"sourceRoot":"/source/"}