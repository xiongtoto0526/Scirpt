{"version":3,"sources":["/source/lib/bootstrap.ts"],"names":["bootstrap"],"mappings":";;;;;qBAqCA,SAAA;;;;sBALmB,UAAU;;;;uBAEH,WAAW;;AAGrC,SAAA,SAAA,CAAkC,SAAc,EAA4B;QAA1B,cAAc,yDAAU,EAAE;;AAE1EA,QAAIA,QAAQA,GAAGA,qBAAYA,GAAGA,CAACA,UAAUA,EAAEA,SAASA,CAACA,CAACA;AAEtDA,QAAIA,WAAWA,GAAGA,QAAQA,CAACA,aAAaA,CAACA,QAAQA,CAACA,CAACA;AAGnDA,6BAAOA,QAAQA,EAAEA,SAASA,EAAEA,cAAcA,CAACA,CAACA;AAE5CA,WAAOA,OAAOA,CAACA,SAASA,CAACA,WAAWA,EAAEA,CAACA,QAAQA,CAACA,CAACA,CAACA;CACnDA","file":"bootstrap.js","sourcesContent":["/*global angular,document,global*/\n// # Bootstrap function\n// Provides sugar over the bundle function and actually bootstrapping the application.\n//\n// ## Usage\n// Just like Angular 2, create a root component and use bootstrap to kick it off:\n// ```js\n// import {Component, View, bootstrap} from 'ng-forward';\n//\n// @Component({\n//   selector: 'app',\n//   bindings: ['ui-router', 'ngAria', MyService]\n// })\n// @View({\n//   template: 'Hello, world!',\n//   directives: [/* Add components/directives here */]\n// })\n// class App{ }\n//\n// bootstrap(App);\n// ```\n// HTML:\n// ```js\n// <html>\n// <body>\n//   <app></app> <!-- app will be bootstrapped here -->\n// </body>\n// </html>\n// ```\n//\n// ## Intro\n// We'll need the bundle function to create our bundle from the root component\nimport bundle from './bundle';\n// We'll need the appWriter to get the selector metadata off of the root component\nimport {bundleStore} from './writers';\n\n// ## Bootstrap\nexport default function bootstrap(component: any, otherProviders: any[] = []): any{\n  // Selector of the root component. In the above example, this would be `app`\n  let selector = bundleStore.get('selector', component);\n  // The actual element we'll be using to bootstrap the application\n  let rootElement = document.querySelector(selector);\n  // Create our bundle from the root component. Note that the name of this\n  // module is also going to be the selector of the root component\n  bundle(selector, component, otherProviders);\n\n  return angular.bootstrap(rootElement, [selector]);\n}\n"],"sourceRoot":"/source/"}