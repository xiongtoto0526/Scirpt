{"version":3,"sources":["/source/util/lib/util/decorator-factory.ts"],"names":["createUniqueName"],"mappings":";;;;;;uBAA4B,YAAY;;AAExC,IAAM,SAAS,GAAG,SAAZ,SAAS;WAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;CAAA,CAAC;;qBAOxD,UAAwB,IAAY,EAAmC;QAAjC,YAAY,yDAAW,UAAU;;AACtE,QAAI,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AAEtB,aAAA,gBAAA;;;kCAAqC;gBAAX,IAAW;;;AACpCA,gBAAIA,KAAKA,CAACA,GAAGA,CAACA,IAAIA,CAAEA,EAAEA;2BACMA,IAAIA,GAAGA,SAASA,EAAEA;;;aAC7CA,MAAMA;AACNA,uBAAOA,IAAIA,CAACA;aACZA;SACDA;KAAAA;AAAA,KAAC;AAEF,QAAM,gBAAgB,GAAG,SAAnB,gBAAgB,CAAI,IAAW,EAAA;AACpC,eAAO,IAAI,KAAK,2BAAyB,IAAI,kBAAa,IAAI,kCAA+B,CAAC;KAC9F,CAAC;AAGF,WAAO,CAAC,YAAA;AACP,YAAI,CAAC,GAAQ,SAAT,CAAC,CAAiB,MAAW,EAAA;AAChC,gBAAM,mBAAmB,GAAG,SAAtB,mBAAmB,CAAI,CAAM,EAAA;AAClC,oBAAI,IAAI,GAAG,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACpC,uCAAc,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACnC,uCAAc,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACnC,qBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aAChB,CAAC;AAEF,gBAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC/B,oBAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AACrB,0BAAM,gBAAgB,CAAC,MAAM,CAAC,CAAC;iBAC/B;AAED,uBAAO,UAAC,CAAM,EAAA;AACb,2CAAc,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACnC,2CAAc,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AACrC,yBAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBAClB,CAAC;aACF,MACI,IAAI,MAAM,KAAK,SAAS,EAAE;AAC9B,uBAAO,UAAC,CAAM;2BAAY,mBAAmB,CAAC,CAAC,CAAC;iBAAA,CAAC;aACjD;AAED,+BAAmB,CAAC,MAAM,CAAC,CAAA;SAC3B,CAAC;AAEF,SAAC,CAAC,cAAc,GAAG;mBAAM,KAAK,CAAC,KAAK,EAAE;SAAA,CAAC;AAEvC,eAAO,CAAC,CAAC;KACT,CAAA,EAAG,CAAC;CACL;;AAAA,CAAC","file":"util/decorator-factory.js","sourcesContent":["import {providerStore} from '../writers';\n\nconst randomInt = () => Math.floor(Math.random() * 100);\n\nexport interface UniqueNameDecorator{\n\t(maybeT: any): any;\n\tclearNameCache(): void;\n}\n\nexport default function(type: string, strategyType: string = 'provider'): UniqueNameDecorator{\n\tlet names = new Set();\n\n\tfunction createUniqueName(name:string): string{\n\t\tif( names.has(name) ) {\n\t\t\treturn createUniqueName(`${name}${randomInt()}`);\n\t\t} else {\n\t\t\treturn name;\n\t\t}\n\t};\n\n\tconst NAME_TAKEN_ERROR = (name:string) : Error => {\n\t\treturn new Error(`A provider with type ${type} and name ${name} has already been registered`);\n\t};\n\n\t// Return the factory\n\treturn ((): UniqueNameDecorator => {\n\t\tlet d: any = function(maybeT: any) : any{\n\t\t\tconst writeWithUniqueName = (t: any) : void => {\n\t\t\t\tlet name = createUniqueName(t.name);\n\t\t\t\tproviderStore.set('type', type, t);\n\t\t\t\tproviderStore.set('name', name, t);\n\t\t\t\tnames.add(name);\n\t\t\t};\n\n\t\t\tif (typeof maybeT === 'string') {\n\t\t\t\tif(names.has(maybeT)) {\n\t\t\t\t\tthrow NAME_TAKEN_ERROR(maybeT);\n\t\t\t\t}\n\n\t\t\t\treturn (t: any) : void => {\n\t\t\t\t\tproviderStore.set('type', type, t);\n\t\t\t\t\tproviderStore.set('name', maybeT, t);\n\t\t\t\t\tnames.add(maybeT);\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (maybeT === undefined) {\n\t\t\t\treturn (t: any) : void => writeWithUniqueName(t);\n\t\t\t}\n\n\t\t\twriteWithUniqueName(maybeT)\n\t\t};\n\n\t\td.clearNameCache = () => names.clear();\n\n\t\treturn d;\n\t})();\n};\n"],"sourceRoot":"/source/"}