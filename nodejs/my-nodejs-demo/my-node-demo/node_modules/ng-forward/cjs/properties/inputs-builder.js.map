{"version":3,"sources":["/source/properties/lib/properties/inputs-builder.ts"],"names":["isDefined","inputsMap","inputsBuilder","inputsBuilder.get","inputsBuilder.createHiddenPropSetter","inputsBuilder.setBindingUsed"],"mappings":"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","file":"properties/inputs-builder.js","sourcesContent":["// This is an implementation that blends a bit of @hannahhoward's a1atscript implementation of custom\n// inputs and @mitranim's ng-decorate one way binding technique.\n// See: https://github.com/hannahhoward/a1atscript/blob/master/src/a1atscript/ng2Directives/PropertiesBuilder.js\n// See: https://github.com/Mitranim/ng-decorate/blob/master/src/bindings.ts#L165\nconst BIND_STRING = '_bind_string_';\nconst BIND_ONEWAY = '_bind_oneway_';\nconst BIND_TWOWAY = '_bind_twoway_';\n\nfunction isDefined(value) {return typeof value !== 'undefined';}\n\n// This function is responsible for transforming the inputs from @Component to ng1 DDO bindings.\nexport function inputsMap(inputs){\n  let definition = {};\n\n  for (let key in inputs) {\n    let lowercaseInput = inputs[key];\n    definition[`@${key}`] = `@${lowercaseInput}`;\n    definition[`[${inputs[key]}]`] = `=?`;\n    definition[`[(${inputs[key]})]`] = `=?`;\n  }\n\n  return definition;\n}\n\nexport default function inputsBuilder(controller, localKey, publicKey){\n  // We are going to be installing a lot of properties on the controller to handle the magic\n  // of our input bindings. Here we are marking them as hidden but writeable, that way\n  // we don't leak our abstraction\n\n  let stringKey = `@${localKey}`;\n  let oneWayKey = `[${publicKey}]`;\n  let twoWayKey = `[(${publicKey})]`;\n  let __stringKey = Symbol();\n  let __oneWayKey = Symbol();\n  let __twoWayKey = Symbol();\n  let __using_binding = Symbol();\n\n  Object.defineProperties(controller, {\n\n    [stringKey]: {\n      enumerable: false, configurable: false,\n      set: createHiddenPropSetter(BIND_STRING, __stringKey),\n      get() { return this[__stringKey]; }\n    },\n\n    [oneWayKey]: {\n      enumerable: false, configurable: false,\n      set: createHiddenPropSetter(BIND_ONEWAY, __oneWayKey),\n      get() { return this[__oneWayKey]; }\n    },\n\n    [twoWayKey]: {\n      enumerable: false, configurable: false,\n      set: createHiddenPropSetter(BIND_TWOWAY, __twoWayKey),\n      get() { return this[localKey]; }\n    },\n\n    [__using_binding]: {\n      enumerable: false, configurable: false, writable: true,\n      value: controller.__using_binding || {}\n    }\n  });\n\n  function createHiddenPropSetter(BIND_TYPE, __privateKey) {\n    return function(val) {\n      this[__privateKey] = val;\n\n      if (isDefined(val)) {\n        setBindingUsed(BIND_TYPE, localKey);\n      }\n\n      if (controller[__using_binding][localKey] === BIND_TYPE) {\n        this[localKey] = val;\n      }\n    }\n  }\n\n  function setBindingUsed(using, key) {\n    if (controller[__using_binding][key] && controller[__using_binding][key] !== using) {\n      throw new Error(`Can not use more than one type of attribute binding simultaneously: ${key}, [${key}], [(${key})]. Choose one.`);\n    }\n    controller[__using_binding][key] = using;\n  }\n}\n"],"sourceRoot":"/source/"}