{"version":3,"sources":["/source/classes/lib/classes/opaque-token.ts"],"names":["OpaqueToken","OpaqueToken.constructor","OpaqueToken.toString"],"mappings":";;;;;;;;;;IA6BA,WAAA;AACEA,aADF,WAAA,CACsBA,KAAaA,EAAAA;8BADnC,WAAA;;AACsBC,YAAAA,CAAAA,KAAKA,GAALA,KAAKA,CAAQA;KAAKA;;iBADxC,WAAA;;eAGUD,oBAAAA;AACRE,8BAAgBA,IAAIA,CAACA,KAAKA,CAAGA;SAC7BA;;;WALF,WAAA","file":"classes/opaque-token.js","sourcesContent":["/**\n * OpaqueToken is used with provide() to bind a const. It allows the dev\n * to avoid using a string.\n *\n * @example\n *\n ```\n let LIVES = new OpaqueToken('threshold');\n\n @Component({\n   selector: 'player',\n   template: `Lives Left: {{ctrl.lives}}`\n })\n @Inject(LIVES)\n class Player {\n   constructor(lives) {\n     this.lives = lives;\n   }\n }\n\n @Component({\n   selector: 'game',\n   providers: [provide(LIVES, {useValue: 3})],\n   directives: [Player],\n   template: `<player></player>`\n })\n class Game {}\n ```\n */\nexport class OpaqueToken {\n  constructor(private _desc: string) { }\n\t\n  toString(): string { \n\t\treturn `Token ${this._desc}`; \n\t}\n}"],"sourceRoot":"/source/"}